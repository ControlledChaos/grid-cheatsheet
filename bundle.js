!function(e){var t={};function n(i){if(t[i])return t[i].exports;var s=t[i]={i:i,l:!1,exports:{}};return e[i].call(s.exports,s,s.exports,n),s.l=!0,s.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(i,s,function(t){return e[t]}.bind(null,s));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="/grid-cheatsheet/",n(n.s=1)}([function(e,t,n){},function(e,t,n){"use strict";n.r(t);const i=[];i[i.length]={name:"display",link:"https://www.w3.org/TR/css3-grid-layout/#grid-model",initValue:"",target:"grid containers",targetForDemo:"grid containers",appliesTo:"all elements",desc:"<p>A <dfn >grid container</dfn> establishes a new <dfn >grid formatting context</dfn> for its contents. This is the same as establishing a block formatting context, except that grid layout is used instead of block layout: floats do not intrude into the grid container, and the grid container’s margins do not collapse with the margins of its contents. The contents of a <i>grid container</i> are laid out into a <i>grid</i>, with <i>grid lines</i> forming the boundaries of each <i>grid items</i>’ containing block. The <a href='https://www.w3.org/TR/css-overflow-3/#propdef-overflow' >overflow</a> property applies to <i>grid containers</i>.</p>\n      <p>Grid containers are not block containers, and so some properties that were designed with the assumption of block layout don’t apply in the context of grid layout. In particular:</p>\n\n      <ul>\n        <li><code>float</code> and <code>clear</code> have no effect on a <dfn>grid item</dfn>.\n          However, the <code>float</code> property still affects the computed value of <code>display</code> on children of a grid container,\n          as this occurs <em>before</em> <dfn>grid items</dfn> are determined.\n        </li>\n        <li><code>vertical-align</code> has no effect on a grid item.\n        </li>\n        <li>the <code>::first-line</code> and <code>::first-letter</code> pseudo-elements do not apply to <dfn>grid containers</dfn>,\n          and <dfn>grid containers</dfn> do not contribute a first formatted line or first letter to their ancestors.\n        </li>\n     </ul>\n\n    <p>If an element’s specified <code>display</code> is <i>inline-grid</i> and the element is floated or absolutely positioned, the computed value of <code>display</code> is <i>grid</i>. The table in <a href='https://www.w3.org/TR/CSS2/visuren.html#dis-pos-flo'>CSS 2.1 Chapter 9.7</a> is thus amended to contain an additional row, with <i>inline-grid</i> in the 'Specified Value' column and <i>grid</i> in the 'Computed Value' column.</p>",values:[{name:"grid",desc:"This value causes an element to generate a block-level <i>grid container</i> box.",current:!0},{name:"inline-grid",desc:"This value causes an element to generate an inline-level <i>grid container</i> box."}],cssRules:[{selector:".parent",props:{display:"grid"}}],demoBefore:"Some text"},i[i.length]={name:"grid-template",group:"alignment",link:"https://www.w3.org/TR/css3-grid-layout/#explicit-grid-shorthand",initValue:"see individual properties",target:"grid containers",targetForDemo:"grid containers",appliesTo:"grid containers",desc:"<p>The <i>grid-template</i> property is a <a href='https://www.w3.org/TR/css-cascade-4/#shorthand-property' >shorthand</a> for setting <i>grid-template-columns</i>,\n    <i>grid-template-rows</i>, and <i>grid-template-areas</i> in a single declaration. It has several distinct syntax forms:</p>\n      <p role='note'><span>Note:</span> The <i>grid</i> shorthand accepts the same syntax, but also resets the implicit grid properties to their initial values. Unless authors want those to cascade in separately, it is therefore recommended to use <i>grid</i> instead of <i>grid-template</i>.</p>",values:[{name:"none",desc:"Sets all three properties to their initial values (<i>none</i>)."},{name:"<‘grid-template-rows’> / <‘grid-template-columns’>",desc:"<p>Sets <i>grid-template-rows</i> and <i>grid-template-columns</i> to the specified values, respectively, and sets <i>grid-template-areas</i> to <i>none</i>.</p>\n\n          <code>\n            <pre>grid-template: auto 1fr / auto 1fr auto;</pre>\n          </code>\n\n          <p>is equivalent to</p>\n\n          <code>\n            <pre>grid-template-rows: auto 1fr;\n            grid-template-columns: auto 1fr auto;\n            grid-template-areas: none; </pre>\n          </code>"},{name:"[ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",desc:"<ul> <li>\n          <p>Sets <i>grid-template-areas</i> to the strings listed.</p> </li>\n            <li> <p>Sets <i>grid-template-rows</i> to the <i>&lt;track-size&gt;</i>s following each string (filling in <i>auto</i> for any missing sizes), and splicing in the named lines defined before/after each size.</p> </li>\n            <li > <p>Sets <i>grid-template-columns</i> to the track listing specified after the slash (or <i>none</i>, if not specified).</p> </li>\n          </ul>\n          <p>This syntax allows the author to align track names and sizes inline with their respective grid areas.</p>\n          <div>\n          <code>\n            <pre>\n              grid-template:\n                [header-top] 'a a a' [header-bottom]\n                [main-top] 'b b b' 1fr [main-bottom] / auto 1fr auto;\n            </pre>\n          </code>\n          <p>is equivalent to</p>\n          <code>\n            <pre>\n              grid-template-areas: 'a a a' 'b b b';\n              grid-template-rows: [header-top] auto [header-bottom main-top] 1fr [main-bottom];\n              grid-template-columns: auto 1fr auto;\n            </pre>\n          </code>\n          <p>and creates the following grid:</p>\n          <figure> <object data='images/grid-shorthand.svg' type='image/svg+xml'></object>\n          <ul>\n            <li>\n              Three columns, sized <i>auto</i>, <span >1fr</span>, and <i>auto</i>, respectively\n            </li>\n            <li>\n              Two rows sized as <i>auto</i> and <span >1fr</span>, respectively.\n            </li>\n            <li>\n              A line named both “header-top” and “a-start” at the top, a line with four names—<wbr>“header-bottom”, “main-top”, “a-end”, and “b-start”—<wbr>in the middle, a line named “main-bottom” and “b-end” at the bottom.\n            </li>\n            <li>A line named “a-start” and “b-start” on the left edge, and a line named “a-end” and “b-end” on the right edge.\n            </li>\n            </ul>\n            <figcaption>\n\n            The grid created by the declarations above. (The “a/b-start/end” names are created <i>implicitly</i> by the <i>named grid areas</i>.) </figcaption> </figure> </div> <p role='note'><span>Note:</span> Note that the <i>repeat()</i> function isn’t allowed in these track listings, as the tracks are intended to visually line up one-to-one with the rows/columns in the “ASCII art”.</p>"}],customValues:[{id:"autofr",name:"auto 1fr / auto 1fr",current:!0},{id:"named-areas-template",name:"[header-top] 'a a a' [header-bottom] [main-top] 'b b b' 1fr [main-bottom] / auto 1fr auto;"}],htmlMarkup:'<div class="parent">\n      <div class="child"></div>\n      <div class="child"></div>\n      <div class="child"></div>\n      <div class="child"></div>\n      <div class="child"></div>\n      <div class="child"></div>\n    </div>',cssRules:[{selector:".parent",props:{display:"grid","grid-template":"auto 1fr / auto 1fr"}},{selector:".child:nth-child(1)",props:{"background-color":"gold","grid-area":"header-top"},valueId:"named-areas-template"},{selector:".child:nth-child(2)",props:{"background-color":"green","grid-area":"header-bottom"},valueId:"named-areas-template"},{selector:".child:nth-child(3)",props:{"background-color":"gold","grid-area":"main-top"},valueId:"named-areas-template"}]};const s={none:{title:""},alignment:{title:"Alignment"}},a="content"in document.createElement("template");var r=e=>{if(a){const t=document.createElement("template");return t.innerHTML=e,t.content.firstElementChild}const t=document.createElement("div");return t.innerHTML=e,t.firstElementChild};function o(e){const t=e.getBoundingClientRect(),n=document.documentElement.clientHeight,i=t.top>0&&t.top<n/2,s=t.bottom<n&&t.bottom>0;return i||s}class l{constructor({groups:e,data:t,targetElem:n}){this.data=t,this.groups=e,this.current=null,this.listsByGroups=this.moveListsToGroups();const i=this.getNavMarkup();this.navElem=r(`<nav class="nav">${i}</nav>`),this.markerElem=r('<span class="nav__marker"></span>'),n.prepend(this.navElem),n.prepend(this.markerElem),this.setCurrentItem(),this.navElem.addEventListener("click",e=>{const t=e.target.closest(".nav__item");t&&this.setCurrentItem(t)})}moveListsToGroups(){return this.data.reduce((e,t)=>{let{group:n}=t;return n||(n="none"),e[n]||(e[n]=[]),e[n].push(t),e},{})}getNavMarkup(){return Object.entries(this.groups).map(([e,{title:t}])=>{if(!this.listsByGroups[e])return;let n="";return t&&(n+=`<h2 class="nav__subheader">${t}</h2>`),n+=`<ul class="nav__list">${this.getListMarkup(e).join("")}</ul>`,n}).join("")}getListMarkup(e){return this.listsByGroups[e].map(({name:e})=>`<li\n          class="${this.getItemClass(e)}"\n          data-name="${e}"\n        ><a\n            href="#${e}"\n            data-parent-nav-item="${e}"\n            class="nav__link"\n          >${e}</a></li>`)}getItemClass(e){const t=["nav__item"],n=e.split(",");for(const e of n)t.push("nav__item--"+e.trim());return t.join(" ")}setCurrentItem(e){e||(e=document.querySelector(".nav__item")),this.currentElem&&this.currentElem.classList.remove("nav__item--current"),this.markerElem.style.top=`${e.offsetTop}px`,e.classList.add("nav__item--current"),this.currentElem=e}}class d{constructor({data:e,current:t,codesElem:n,classList:i}){this.data=e,this.current=t,this.classList=i,this.stylesElem=this.getStylesElem(),this.codesElem=n,this.setStyles()}getStylesElem(){const e=r(`<style id="style-${this.data.name}"></style>`);return document.head.append(e),e}getStyles(){const e=this.data.cssRules,t=`.${this.classList.join(" ")}`;let n="",i="";if(!e)return{};for(const{selector:s,props:a,valueId:r}of e){let e="",o="";const l=[t,s].join(" ");if(!r||r===this.current.id){for(let[t,n]of Object.entries(a)){t===this.data.name&&(n=this.current.value);let i=`${t}: ${n};\n`;e+="  "+i,t===this.data.name&&(i=`<mark>${i}</mark>`),o+="  "+i}i+=`${l} {\n${e}}\n`,n+=`${s} {\n${o}}\n`}}return{visibleStyles:n,hiddenStyles:i}}setStyles(){this.styles=this.getStyles(),this.stylesElem.innerHTML=this.styles.hiddenStyles,this.codesElem.innerHTML=this.styles.visibleStyles}update(e){this.current=e,this.setStyles()}}const c=document.querySelector("#demo-tmpl").content.firstElementChild,u={demos:".parent","grid containers":".parent","grid items":".child--featured"};class h{constructor(e){this.data=e,this.targetElemSelector=u[this.data.targetForDemo],this.values=this.data.customValues||this.data.values,this.classList=this.getClassList(),this.wrapper=this.getWrapper(),this.codesElem=this.wrapper.querySelector(".demo__code"),this.current=this.getCurrent(),this.stylesController=new d({data:e,current:this.current,codesElem:this.codesElem,classList:this.classList}),this.addControls()}getWrapper(){const e=c.cloneNode(!0);e.querySelector(".demo").classList.add(...this.classList);const t=e.querySelector(".demo__view");return this.data.htmlMarkup&&(t.innerHTML=this.data.htmlMarkup),this.data.demoBefore&&t.insertAdjacentHTML("afterbegin",this.data.demoBefore),e}getClassList(){const e=[],t=this.data.name.split(",");for(const n of t)e.push("demo--prop-"+n.trim());return this.targetElemSelector.search("featured")>-1&&e.push("demo--has-featured"),e}addControls(){const e=this.getControlsMarkup(),t=r(`<div class="demo__controls">${e}</div>`);t.addEventListener("click",e=>{this.controlsOnClick(e)}),this.wrapper.prepend(t),this.current.control=t.querySelector(".demo__control--current")}getControlsMarkup(){const e=[];if(this.values){for(const{id:t,name:n,current:i}of this.values){const s=["demo__control"];(i||n===this.currentValueId)&&s.push("demo__control--current"),e.push(`<button\n        type="button"\n        class="${s.join(" ")}"\n        data-value-id="${t||n}">${n}</button>`)}return e.join(" ")}}getCurrent(){if(!this.values)return;let e,t;for(const{id:n,name:i,current:s}of this.values)s&&(t=n||i,e=i);return t||(t=this.values[0].id||this.values[0].name,e=this.values[0].name),{id:t,value:e,control:null}}controlsOnClick(e){const t=e.target.closest(".demo__control");t&&(this.current.control.classList.remove("demo__control--current"),t.classList.add("demo__control--current"),this.current.control=t,this.current.id=t.dataset.valueId,this.current.value=t.innerHTML,this.stylesController.update(this.current))}}class p{constructor(e){this.data=e,this.demo=new h(e),this.demoWrapper=this.demo.wrapper;const t=[this.getTitle(),this.getLink(),this.demoWrapper,this.getDesc(),this.getTarget(),this.getInitialValue(),this.getValues()];this.sectionElem=r('<section class="content__item"></section>'),t.forEach(e=>this.sectionElem.append(e))}getTitle(){return r(`<h2\n      class="contebt__title"\n      id="${this.data.name}"\n      >${this.data.name}</h2>`)}getLink(){if(this.data.link){var e=this.data.link.replace("http://www.","");return r(`<a href="${this.data.link}">${e}</a>`)}}getDesc(){if(this.data.desc)return r(`<div class="content__desc">${this.data.desc}</div>`)}getTarget(){if(this.data.appliesTo)return r(`<p class="content__initial-value"><b>Applies to</b>: ${this.data.appliesTo}.</p>`)}getInitialValue(){if(this.data.initValue)return r(`<p class="content__initial-value"><b>Initial</b>: ${this.data.initValue}.</p>`)}getValues(){if(!this.data.values)return;let e="";for(const{name:t,desc:n}of this.data.values){e+=`<dt id="${this.data.name+"__"+t}" class="content-values__term">${t}</dt>`+`<dd class="content-values__desc">${n}</dd>`}return r(`<dl class="content-values">${e}</dl>`)}}class m{constructor(){this.control=document.querySelector(".theme-control"),this.theme=this.getTheme(),this.lsKey="gdchTheme",this.control.addEventListener("click",()=>{this.theme="seagreen"===this.theme?"default":"seagreen",this.setTheme()})}getTheme(){let e=localStorage[this.lsKey];return e=e||"seagreen",e}setTheme(){document.body.dataset.theme=this.theme,localStorage[this.lsKey]=this.theme}}n(0);const g=[];let f;(new m).setTheme(),f=new l({groups:s,data:i,targetElem:document.querySelector(".l-aside__content")}),function(){const e=document.querySelector(".l-main");for(const t of i){const n=new p(t);g.push(n.sectionElem),e.append(n.sectionElem)}}(),function(){const e=document.querySelectorAll(".nav__item");e.reduce=[].reduce;const t=e.reduce((e,t)=>(e[t.id]=t,e),{}),n=function(e,t,n){let i;return function(){const s=this,a=arguments,r=function(){i=null,n||e.apply(s,a)},o=n&&!i;clearTimeout(i),i=setTimeout(r,t),o&&e.apply(s,a)}}((function(){for(let e of g)o(e)&&t[e.id]&&f.setCurrentItem(t[e.id])}),100);window.addEventListener("scroll",n)}()}]);